name: Release

on:
  create:
    tags:
      - '**'

jobs:
  publish-docker:
    name: Publish Docker

    runs-on: ubuntu-latest

    timeout-minutes: 15

    # if GITHUB_REF starts with @zws.im/api
    if: ${{ startsWith(env.GITHUB_REF_NAME, '@zws.im/api') }}

    steps:
      - name: Checkout git repository
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          # TODO: enable this again
          # push: true
          push: false
          # TODO: Re-enable ARM builds once Prisma binaries can be installed - https://github.com/docker/build-push-action/blob/master/docs/advanced/multi-platform.md
          platforms: linux/amd64
          tags: zwsim/zws:latest

  create-release:
    name: Create release

    runs-on: ubuntu-latest

    timeout-minutes: 15

    steps:
      - name: Checkout git repository
        uses: actions/checkout@v2
      - name: Generate release notes
        uses: actions/github-script@v5
        id: release-info
        with:
          script: |
            const [package, version] = process.env.GITHUB_REF_NAME.split('@');
            const [packageScope, packageName] = package.split('/');

            const changelogUrl = `https://github.com/${process.env.GITHUB_REPOSITORY}/blob/main/packages/${packageName}/CHANGELOG.md#${version.replaceAll('.', '')}`;

            return {
              changelog_url: changelogUrl ,
              version,
            };

      - name: Create release
        # run: gh release create
        run: echo "changelog_url=${{steps.release-info.outputs.result.changelog_url}}, version=${{steps.release-info.outputs.result.version}}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
